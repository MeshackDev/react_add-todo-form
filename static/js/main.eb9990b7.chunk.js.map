{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","id","username","getUser","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","hasTitleError","setHasTitleError","hasUserError","setHasUserError","newTitle","setNewTitle","idForUser","setIdForUser","action","method","onSubmit","e","preventDefault","newTodo","prevTodos","addTodo","Math","max","htmlFor","type","placeholder","value","onChange","target","Number","disabled","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb9990b7.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id=\"1\"\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUser);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const [newTitle, setNewTitle] = useState('');\n  const [idForUser, setIdForUser] = useState(0);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n    setNewTitle('');\n    setIdForUser(0);\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    setHasTitleError(!newTitle);\n    setHasUserError(!idForUser);\n\n    if (newTitle && idForUser) {\n      const newTodo: Todo = {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title: newTitle,\n        completed: false,\n        userId: idForUser,\n        user: getUser(idForUser),\n      };\n\n      addTodo(newTodo);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={e => {\n              setNewTitle(e.target.value);\n              setHasTitleError(false);\n            }}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={idForUser}\n            onChange={e => {\n              setIdForUser(Number(e.target.value));\n              setHasUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(currentUser => (\n              <option\n                value={currentUser.id}\n                key={currentUser.id}\n              >\n                {currentUser.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}